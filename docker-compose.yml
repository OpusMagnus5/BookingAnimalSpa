services:

  postgres:
    container_name: 'postgres'
    image: postgres:16
    restart: no
    env_file:
      - 'env-db.env'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $POSTGRES_DB"]
    volumes:
      - type: bind
        source: /home/booking_animal_spa/postgres
        target: ./
    network_mode: host

  config-server:
     container_name: 'config-server'
     image: config-server:latest
     restart: no
     healthcheck:
       test: ["CMD-SHELL", "curl -f http://localhost:8888/actuator/health || exit 1"]
     volumes:
       - type: bind
         source: /home/booking_animal_spa/config-server
         target: ./
     network_mode: host

  gateway:
    container_name: gateway
    image: gateway:latest
    restart: no
    depends_on:
      config-server:
        condition: service_healthy
      service-discovery:
        condition: service_healthy
    volumes:
      - type: bind
        source: /home/booking_animal_spa/gateway
        target: ./
    network_mode: host

  service-discovery:
    container_name: service-discovery
    image: service-discovery:latest
    restart: on-failure
    depends_on:
      config-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8762/actuator/health || exit 1"]
    volumes:
      - type: bind
        source: /home/booking_animal_spa/service-discovery
        target: ./
    network_mode: host

  user-service:
    container_name: user-service
    image: user-service:latest
    restart: no
    depends_on:
      config-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
      service-discovery:
        condition: service_healthy
    env_file:
      - 'env-conf.env'
    volumes:
      - type: bind
        source: /home/booking_animal_spa/user-service
        target: ./
    network_mode: host